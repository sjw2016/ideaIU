<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <context:component-scan base-package="cn.util"/>
    <!--定时任务-->
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" />
    <!--&lt;!&ndash; 配置安全管理器securityManager， 缓存技术: 缓存管理 realm:负责获取处理数据 &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--<property name="realm" ref="myShiroRealm" />-->
        <!--<property name="cacheManager" ref="cacheManager" />-->

    <!--</bean>-->

    <!--&lt;!&ndash; 項目自定义的Realm,从数据库中获取用户的安全数据 &ndash;&gt;-->
    <!--<bean id="myShiroRealm" class="cn.business.impl.CustomRealm">-->
        <!--&lt;!&ndash; 配置缓存管理器&ndash;&gt;-->
        <!--<property name="cacheManager" ref="cacheManager" />-->
        <!--&lt;!&ndash; 配置加密器 &ndash;&gt;-->
        <!--<property name="credentialsMatcher">-->
            <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
                <!--<property name="hashAlgorithmName" value="MD5"></property> &lt;!&ndash; 加密算法的名称 &ndash;&gt;-->
                <!--<property name="hashIterations" value="1024"></property> &lt;!&ndash; 配置加密的次数 &ndash;&gt;-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 用户授权信息Cache &ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />-->

    <!--&lt;!&ndash; 必须配置lifecycleBeanPostProcessor:管理shiro中常见的对象 &ndash;&gt;-->
    <!--&lt;!&ndash; 保证实现了Shiro内部lifecycle函数的bean执行 &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />-->

    <!--&lt;!&ndash; shiro的核心配置:  配置shiroFileter id名必须与web.xml中的filtername保持一致 &ndash;&gt;-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--<property name="securityManager" ref="securityManager" />-->
        <!--<property name="loginUrl" value="/Entrance/login" />-->
        <!--<property name="successUrl" value="/index.jsp" />-->
        <!--<property name="unauthorizedUrl" value="/unauthorized.jsp" />-->
        <!--<property name="filters">-->
            <!--<map>-->
                <!--<entry key="authc">-->
                    <!--<bean class="cn.business.impl.MyPassThruAuthenticationFilter">-->
                        <!--<property name="loginErrUrl" value="/user/login_err.do"/>&lt;!&ndash; 注意这里的loginErrUrl与上面的loginUrl的区别 &ndash;&gt;-->
                    <!--</bean>-->
                <!--</entry>-->
            <!--</map>-->
        <!--</property>-->
        <!--&lt;!&ndash; shiro过滤器的具体配置 &ndash;&gt;-->
        <!--&lt;!&ndash; anon-匿名访问，authc-需要认证 &ndash;&gt;-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--/ = anon-->
                <!--/user/login_err.do = anon-->
                <!--/user/unauthorized_err.do = anon-->
                <!--/user/logout.do = logout-->
                <!--/** = authc-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 配置緩存管理器 -->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--&lt;!&ndash; 指定 ehcache 的配置文件，下面会给到 &ndash;&gt;-->
        <!--<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置进行授权和认证的 Realm，要新增一个java类来实现，下面会有，class=包名.类名，init-methood是初始化的方法 &ndash;&gt;-->
    <!--<bean id="myRealm"-->
          <!--class="cn.business.impl.CustomRealm"-->
          <!--init-method="setCredentialMatcher"></bean>-->

    <!--&lt;!&ndash; 配置 Shiro 的 SecurityManager Bean. &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--<property name="cacheManager" ref="cacheManager"/>-->
        <!--<property name="realm" ref="myRealm"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor"-->
          <!--class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--&lt;!&ndash; 配置 ShiroFilter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 name 一致  &ndash;&gt;-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--&lt;!&ndash; 装配 securityManager &ndash;&gt;-->
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--&lt;!&ndash; 配置登陆页面 &ndash;&gt;-->
        <!--<property name="loginUrl" value="/index.jsp"/>-->
        <!--&lt;!&ndash; 登陆成功后的一面 &ndash;&gt;-->
        <!--<property name="successUrl" value="/shiro-success.jsp"/>-->
        <!--<property name="unauthorizedUrl" value="/shiro-unauthorized.jsp"/>-->
        <!--&lt;!&ndash; 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  &ndash;&gt;-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--&lt;!&ndash; 配置登出: 使用 logout 过滤器 &ndash;&gt;-->
                <!--/shiro-logout = logout-->
                <!--/shiro-* = anon-->
                <!--/user.jsp = roles[user]-->
                <!--/admin.jsp = roles[admin]-->
                <!--/** = authc-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--&lt;!&ndash; 调用我们配置的权限管理器 &ndash;&gt;-->
        <!--<property name="securityManager" ref="securityManager" />-->
        <!--&lt;!&ndash; 配置我们的登录请求地址 &ndash;&gt;-->
        <!--<property name="loginUrl" value="/Entrance/login" />-->
        <!--&lt;!&ndash; 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 &ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/unauthorized" />-->
        <!--&lt;!&ndash; 退出 &ndash;&gt;-->
        <!--<property name="filters">-->
            <!--<util:map>-->
                <!--<entry key="logout" value-ref="logoutFilter" />-->
            <!--</util:map>-->
        <!--</property>-->
        <!--&lt;!&ndash; 权限配置 &ndash;&gt;-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--&lt;!&ndash; anon表示此地址不需要任何权限即可访问 &ndash;&gt;-->
                <!--/Entrance/login=anon-->
                <!--/index=anon-->
                <!--/static/**=anon-->
                <!--/doLogout=logout-->
                <!--&lt;!&ndash;所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login &ndash;&gt;-->
                <!--/** = authc-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 退出过滤器 &ndash;&gt;-->
    <!--<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">-->
        <!--<property name="redirectUrl" value="/index" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 会话ID生成器 &ndash;&gt;-->
    <!--<bean id="sessionIdGenerator"-->
          <!--class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />-->
    <!--&lt;!&ndash; 会话Cookie模板 关闭浏览器立即失效 &ndash;&gt;-->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--<constructor-arg value="sid" />-->
        <!--<property name="httpOnly" value="true" />-->
        <!--<property name="maxAge" value="-1" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; 会话DAO &ndash;&gt;-->
    <!--<bean id="sessionDAO"-->
          <!--class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
        <!--<property name="sessionIdGenerator" ref="sessionIdGenerator" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; 会话验证调度器，每30分钟执行一次验证 ，设定会话超时及保存 &ndash;&gt;-->
    <!--<bean name="sessionValidationScheduler"-->
          <!--class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">-->
        <!--<property name="interval" value="1800000" />-->
        <!--<property name="sessionManager" ref="sessionManager" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; 会话管理器 &ndash;&gt;-->
    <!--<bean id="sessionManager"-->
          <!--class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
        <!--&lt;!&ndash; 全局会话超时时间（单位毫秒），默认30分钟 &ndash;&gt;-->
        <!--<property name="globalSessionTimeout" value="1800000" />-->
        <!--<property name="deleteInvalidSessions" value="true" />-->
        <!--<property name="sessionValidationSchedulerEnabled" value="true" />-->
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />-->
        <!--<property name="sessionDAO" ref="sessionDAO" />-->
        <!--<property name="sessionIdCookieEnabled" value="true" />-->
        <!--<property name="sessionIdCookie" ref="sessionIdCookie" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 安全管理器 &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--<property name="realm" ref="databaseRealm" />-->
        <!--<property name="sessionManager" ref="sessionManager" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; 相当于调用SecurityUtils.setSecurityManager(securityManager) &ndash;&gt;-->
    <!--<bean-->
            <!--class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="staticMethod"-->
                  <!--value="org.apache.shiro.SecurityUtils.setSecurityManager" />-->
        <!--<property name="arguments" ref="securityManager" />-->
    <!--</bean>-->

    <!--&lt;!&ndash;<bean id="databaseRealm" class="com.how2java.realm.DatabaseRealm">&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--&lt;!&ndash; 保证实现了Shiro内部lifecycle函数的bean执行 &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />-->

    <!--<bean id="databaseRealm" class="cn.business.impl.CustomRealm"></bean>-->

</beans>